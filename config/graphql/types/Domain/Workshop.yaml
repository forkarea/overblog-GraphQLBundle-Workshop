WorkshopPrototype:
    decorator: true
    config:
        fields:
            conference:
                type: "String!"
            name:
                type: "String!"

Workshop:
    type: object
    inherits: [WorkshopPrototype]
    config:
        fields:
            id:
                type: "UUID!"
            conference:
                deprecationReason: "use conferenceRelation now, it'll be excluded at 2018-07-01"
                resolve: "@=value.getConference().getName()"
            conferenceRelation:
                type: "Conference"
                resolve: "@=value.getConference()"
            enrolledPeople:
                type: "[Person]"
                args:
                    enrollmentType:
                        type: WorkshopEnrollment
                description: "All People related to this Workshop"
                resolve: '@=resolver("app.graphql.resolver.people.by.workshop", [value, args])'

WorkshopInput:
    type: input-object
    inherits: [WorkshopPrototype]

WorkshopConnection:
    type: relay-connection
    config:
        nodeType: Workshop

WorkshopEnrollment:
    type: enum
    config:
        description: "Possible enrollment types between Workshop and Person"
        values:
            TUTOR:
                value: '@=constant("App\\Infrastructure\\GraphQL\\Workshop\\Resolver\\WorkshopPeople::ENROLLMENT_TYPE_TUTOR")'
            ATTENDEE:
                value: '@=constant("App\\Infrastructure\\GraphQL\\Workshop\\Resolver\\WorkshopPeople::ENROLLMENT_TYPE_ATTENDEE")'